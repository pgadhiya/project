@model project.EDM.tblfaculty

@{
    ViewBag.Title = "FacultyEdit";
    Layout = "~/Areas/admin/Views/Shared/_LayoutTheme.cshtml";
    var item = ViewBag.facultyobj as project.EDM.tblfaculty;
}
<main id="main" class="main">

    <div class="pagetitle">
        <h1>Faculty Tables</h1>
        <nav>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/admin/Admin">Home</a></li>
                <li class="breadcrumb-item">Tables</li>
                <li class="breadcrumb-item active">Data</li>
            </ol>
        </nav>
    </div><!-- End Page Title -->

    <section class="section">
        <div class="row">
            <div class="col-lg-12">

                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">
                            Faculty Edit
                            <!--<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalDialogScrollable">
        Add+
    </button>-->
                        </h5>
                        <!--<p>Add lightweight datatables to your project with using the <a href="https://github.com/fiduswriter/Simple-DataTables" target="_blank">Simple DataTables</a> library. Just add <code>.datatable</code> class name to any table you wish to conver to a datatable</p>-->
                        <!-- Table with stripped rows -->

                        @using (Html.BeginForm("FacultyEdit", "faculty", FormMethod.Post, new { @enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.F_ID)*@
                        <div class="form-group" hidden>
                            <label class="control-label">ID</label>
                            <input type="text" name="F_ID" value="@item.F_ID" class="form-control" />
                        </div>

                        @*<div class="form-group">
            @Html.LabelFor(model => model.F_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.F_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.F_Name, "", new { @class = "text-danger" })
            </div>
        </div>*@
                        <div class="form-group">
                            <label class="control-label">First Name</label>
                            <input type="text" name="fname" value="@item.F_Name" class="form-control" />
                        </div>

                        @*<div class="form-group">
            @Html.LabelFor(model => model.L_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.L_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.L_Name, "", new { @class = "text-danger" })
            </div>
        </div>*@
                        <div class="form-group">
                            <label class="control-label">Last Name</label>
                            <input type="text" name="L_Name" value="@item.L_Name" class="form-control" />
                        </div>

                        @*<div class="form-group">
            @Html.LabelFor(model => model.E_mail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.E_mail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.E_mail, "", new { @class = "text-danger" })
            </div>
        </div>*@
                        <div class="form-group">
                            <label class="control-label">Email</label>
                            <input type="text" name="E_mail" value="@item.E_mail" class="form-control" />
                        </div>

                        @*<div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>*@
                        <div class="form-group">
                            <label class="control-label">Password Name</label>
                            <input type="text" name="Password" value="@item.Password" class="form-control" />
                        </div>

                        @*<div class="form-group">
            @Html.LabelFor(model => model.F_Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.F_Image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.F_Image, "", new { @class = "text-danger" })
            </div>
        </div>*@
                        <div class="form-group">
                            <label class="control-label">Image</label>
                            <div class="mb-3">
                                <img src='~/Images/@item.F_Image' style="width:50px" />
                                @*<input type="text" name="fimage" value="@item.F_Image" class="form-control"/>*@
                            </div>
                            <div>
                                @*<input type="radio" id="no" value="noupdate" name="imgupdate" />
                                <label>No</label>
                                <input type="radio" id="nes" value="noupdate" name="imgupdate" />
                                <label>Yes</label>*@
                                <input type="file" id="file" name="file" value="@item.F_Image" class="form-control"/>
                            </div>
                            @*<input type="hidden" name="F_Image" value="@item.F_Image" class="form-control"/>*@

                            
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10 my-3">
                                <input type="submit" value="Save" class="btn btn-secondary" />
                            </div>
                        </div>
                    </div>
                        }

                        <div>
                            @Html.ActionLink("Back to List", "Index")
                        </div>
                        <!-- End Table with stripped rows -->

                    </div>
                </div>

            </div>
        </div>
    </section>

</main><!-- End #main -->

